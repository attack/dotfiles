if &compatible
  set nocompatible
end

" vundle commands
"
" install? :BundleInstall
" update? :BundleInstall!
" clean? :PluginClean!

filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" Let Vundle manage Vundle
Bundle 'gmarik/vundle'
Bundle 'tpope/vim-sensible'

"
" Look & Feel
"
Bundle 'chriskempson/tomorrow-theme', {'rtp': 'vim/'}
Bundle 'itchyny/lightline.vim'

"
" Rails & co.
"
Bundle 'vim-ruby/vim-ruby'
Bundle 'tpope/vim-rails'
Bundle 'nelstrom/vim-textobj-rubyblock'
Bundle 'tpope/vim-abolish'
Bundle 'thoughtbot/vim-rspec'

"
" File Support
"
Bundle 'tpope/vim-haml'
Bundle 'mustache/vim-mustache-handlebars'
Bundle 'plasticboy/vim-markdown'
Bundle 'pangloss/vim-javascript'
Bundle 'kchmck/vim-coffee-script'

"
" General Editing
"
Bundle 'scrooloose/nerdtree'
Bundle 'regreplop.vim'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-repeat'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-commentary'
Bundle 'tpope/vim-unimpaired'
Bundle 'kana/vim-textobj-user'
Bundle 'Julian/vim-textobj-variable-segment'
Bundle 'AndrewRadev/splitjoin.vim'

"
" Searching & Replacing
"
Bundle 'kien/ctrlp.vim'
Bundle 'epmatsw/ag.vim'
Bundle 'Peeja/vim-cdo'
Bundle 'folke/AutoTag'
Bundle 'tpope/vim-bundler'

if filereadable(expand("~/.vimrc.bundles.shared"))
  source ~/.vimrc.bundles.shared
endif

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

syntax on
filetype plugin indent on
